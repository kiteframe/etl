version: 2.1
orbs:
  docker: circleci/docker@1.0.1
workflows:
  push:
    jobs:
      - build
      - phpunit:
          requires:
            - build
      - php-cs-fixer:
          requires:
            - build
      - security-checker:
          requires:
            - build
      - phpstan:
          requires:
            - build
      - deptrac:
          requires:
            - build
jobs:
  build:
    executor: docker/docker
    steps:
      - setup_remote_docker
      - checkout
      - docker/check
      - docker/build:
          image: smudger/app
          tag: '$CIRCLE_SHA1,latest'
      - run:
          name: Save Docker images
          command: |
            mkdir docker-cache
            docker save -o docker-cache/$CIRCLE_SHA1.tar smudger/app:$CIRCLE_SHA1
            docker save -o docker-cache/latest.tar smudger/app:latest
      - persist_to_workspace:
          root: .
          paths:
            - docker-cache
  phpunit:
    executor: docker/docker
    steps:
      - import_image
      - run:
          name: Run tests
          command: |
              docker run --name app smudger/app:latest vendor/bin/phpunit --log-junit results.xml
      - copy_results_from_docker:
          folder: phpunit
      - store_test_results:
          path: test-results
  php-cs-fixer:
    executor: docker/docker
    steps:
      - import_image
      - run:
          name: Run cs fixer
          command: |
            mkdir -p test-results/php-cs-fixer
            docker run --name app smudger/app:latest vendor/bin/php-cs-fixer fix -v --dry-run --using-cache=no --format junit > test-results/php-cs-fixer/results.xml
      - store_test_results:
          path: test-results
  security-checker:
    executor: docker/docker
    steps:
      - import_image
      - run:
          name: Run security checker
          command: docker run smudger/app:latest vendor/bin/security-checker security:check
  phpstan:
    executor: docker/docker
    steps:
      - import_image
      - run:
          name: Run static analysis
          command: |
            mkdir -p test-results/phpstan
            docker run --name app smudger/app:latest vendor/bin/phpstan analyze --error-format junit --no-progress > test-results/phpstan/results.xml
      - store_test_results:
          path: test-results
  deptrac:
    executor: docker/docker
    steps:
      - import_image
      - run:
          name: Run dependency analysis
          command: |
            mkdir -p test-results/deptrac
            docker run --name app smudger/app:latest vendor/bin/deptrac --formatter-junit=true --formatter-junit-dump-xml=results.xml
      - copy_results_from_docker:
          folder: deptrac
      - store_test_results:
          path: test-results
commands:
  import_image:
    description: Import the docker image from the build step
    steps:
      - setup_remote_docker
      - attach_workspace:
          at: .
      - run:
          name: Load image
          command: docker load < docker-cache/latest.tar
  copy_results_from_docker:
    description: Copy test results from a docker container
    parameters:
      folder:
        type: string
        description: Host folder to store test results in
    steps:
      - run:
          name: Copy test results
          when: always
          command: |
            mkdir -p test-results/<< parameters.folder >>
            docker cp app:/app/results.xml test-results/<< parameters.folder >>
